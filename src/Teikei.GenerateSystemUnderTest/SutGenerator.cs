using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;

namespace Teikei.GenerateSystemUnderTest;

[Generator]
public class InterfacedGenerator : IIncrementalGenerator
{
	private const string AttributesNamespace = "Teikei";
	private const string AttributeName = "GenerateSut";

	public void Initialize(IncrementalGeneratorInitializationContext context)
	{
		var builder = new AttributeDeclarationBuilder(AttributeName).WithTargets(
			AttributeTargets.Method
		);
		var attribute = builder.Build();

		var namespaceNode = SyntaxFactory
			.NamespaceDeclaration(SyntaxFactory.IdentifierName(AttributesNamespace))
			.WithLeadingTrivia(
				SyntaxFactory.SyntaxTrivia(
					SyntaxKind.SingleLineCommentTrivia,
					"// <auto-generated />"
				)
			)
			.WithMembers(SyntaxFactory.SingletonList<MemberDeclarationSyntax>(attribute));

		var source = namespaceNode.NormalizeWhitespace("\t", "\n").ToFullString();

		context.RegisterPostInitializationOutput(pi =>
			pi.AddSource($"{AttributesNamespace}_{AttributeName}__.g.cs", source)
		);
	}
}
